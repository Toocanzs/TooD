RWTexture2D<float4> ExteriorDistanceBuffer;
Texture2D<float4> WallBuffer;
int pixelsPerUnit;
float2 _ProbeAreaOrigin;
uint2 wallBufferSize;

#pragma kernel JFA_set_seed
[numthreads(64,1,1)]
void JFA_set_seed (uint3 groupID : SV_GroupID, 
   uint3 groupThreadID : SV_GroupThreadID, 
   uint groupIndex : SV_GroupIndex, 
   uint3 id : SV_DispatchThreadID) 
{
    float4 col = 0;
    
    float2 worldPos = float2(id.xy) / pixelsPerUnit + _ProbeAreaOrigin;
    if(WallBuffer[id.xy].a > 0)
    {
        col = float4(worldPos, 0, 1);
    }
    
    ExteriorDistanceBuffer[id.xy] = col;
}

RWTexture2D<float4> JFA_Source;
RWTexture2D<float4> JFA_Dest;
uint stepWidth;

#pragma kernel JFA_flood
[numthreads(64,1,1)]
void JFA_flood (uint3 groupID : SV_GroupID, 
uint3 groupThreadID : SV_GroupThreadID, 
uint groupIndex : SV_GroupIndex, 
uint3 id : SV_DispatchThreadID) 
{
    float2 worldPos = float2(id.xy) / pixelsPerUnit + _ProbeAreaOrigin;
    float bestDistance = 9999;
    float4 bestCoordinate = 0;
    for(int y = -1; y <= 1; y++)
    {
        for(int x = -1; x <= 1; x ++)
        {
            uint2 sampleP = id.xy + uint2(x,y) * stepWidth;
            if(any(bool4(sampleP < 0, sampleP > wallBufferSize)))
                continue;
            float4 data = JFA_Source[sampleP];
            if(data.a < 1)//Invalid data
                continue;
            float currentDistance = distance(data.xy, worldPos);
            if(currentDistance < bestDistance)
            {
                bestDistance = currentDistance;
                bestCoordinate = float4(data.xy, 0, 1);
            }
        }
    }
    
    JFA_Dest[id.xy] = bestCoordinate;
}
 
#pragma kernel JFA_dist
[numthreads(64,1,1)]
void JFA_dist (uint3 groupID : SV_GroupID, 
   uint3 groupThreadID : SV_GroupThreadID, 
   uint groupIndex : SV_GroupIndex, 
   uint3 id : SV_DispatchThreadID) 
{
    float2 worldPos = float2(id.xy) / pixelsPerUnit + _ProbeAreaOrigin;
    float4 data = JFA_Source[id.xy];
    float d = distance(data.xy, worldPos);
    JFA_Dest[id.xy] = float4(d,d,d,1);
}